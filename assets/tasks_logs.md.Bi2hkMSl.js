import{_ as s,c as a,o as i,V as t,aa as e,ab as n,ac as l,ad as p,ae as h}from"./chunks/framework.DyV3CXln.js";const B=JSON.parse('{"title":"Segregate Controller And Datapath Logs","description":"","frontmatter":{},"headers":[],"relativePath":"tasks/logs.md","filePath":"tasks/logs.md"}'),k={name:"tasks/logs.md"},o=t(`<h1 id="segregate-controller-and-datapath-logs" tabindex="-1">Segregate Controller And Datapath Logs <a class="header-anchor" href="#segregate-controller-and-datapath-logs" aria-label="Permalink to &quot;Segregate Controller And Datapath Logs&quot;">​</a></h1><p>Kanister uses structured logging to ensure that its logs can be easily categorized, indexed and searched by downstream log aggregation software.</p><p>By default, Kanister logs are output to the controller&#39;s <code>stderr</code> in JSON format. Generally, these logs can be categorized into <em>system logs</em> and <em>datapath logs</em>.</p><p>System logs are logs emitted by the Kanister to track important controller events like interactions with the Kubernetes APIs, CRUD operations on blueprints and actionsets etc.</p><p>Datapath logs, on the other hand, are logs emitted by task pods created by Kanister. These logs are streamed to the Kanister controller before the task pods are terminated to ensure they are not lost inadvertently. Datapath log lines usually include the <code>LogKind</code> field, with its value set to <code>datapath</code>.</p><p>The rest of this documentation provides instructions on how to segregate Kanister&#39;s system logs from datapath logs using <a href="https://grafana.com/oss/loki/" target="_blank" rel="noreferrer">Loki</a> and <a href="https://grafana.com/oss/grafana" target="_blank" rel="noreferrer">Grafana</a>.</p><p>To run the provided commands, access to a Kubernetes cluster using the <code>kubectl</code> and <code>helm</code> command-line tools is required.</p><p>Follow the instructions in the <a href="./../install.html">installation</a> page to deploy Kanister on the cluster.</p><h2 id="deployments-setup" tabindex="-1">Deployments Setup <a class="header-anchor" href="#deployments-setup" aria-label="Permalink to &quot;Deployments Setup&quot;">​</a></h2><p>The commands and screenshots in this documentation are tested with the following software versions:</p><ul><li>Loki 2.5.0</li><li>Grafana 8.5.3</li><li>Promtail 2.5.0</li></ul><p>Let&#39;s begin by installing Loki. Loki is a datastore optimized for holding log data. It indexes log data via streams made up of logs, where each stream is associated with a unique set of labels.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo add grafana https://grafana.github.io/helm-charts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki install --create-namespace loki grafana/loki </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image.tag=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0</span></span></code></pre></div><p>Confirm that the Loki StatefulSet is successfully rolled out:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki rollout status sts/loki</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>The Loki configuration used in this installation is meant for demonstration purposes only. The Helm chart deploys a non-HA single instance of Loki, managed by a StatefulSet workload. See the <a href="https://grafana.com/docs/loki/latest/installation/" target="_blank" rel="noreferrer">Loki installation documentation</a> for other installation methods that may be more suitable for your requirements.</p></div><p>Use Helm to install Grafana with a pre-configured Loki data source:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svc_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki get svc loki -ojsonpath=&#39;{.metadata.name}.{.metadata.namespace}:{.spec.ports[?(@.name==&quot;http-metrics&quot;)].port}&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> helm -n grafana install --create-namespace grafana grafana/grafana -f -</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">datasources:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  datasources.yaml:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    apiVersion: 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    datasources:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    - name: Loki</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      type: loki</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      url: http://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$svc_url</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      access: proxy</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      isDefault: true</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre></div><p>Confirm that the Grafana Deployment is successfully rolled out:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grafana rollout status deploy/grafana</span></span></code></pre></div><p>Set up port-forward to access the Grafana UI:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grafana port-forward svc/grafana </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:80</span></span></code></pre></div><p>Use a web browser to navigate to <code>localhost:3000</code>:</p><p><img src="`+e+'" alt="image"></p><p>The default login username is <code>admin</code>.</p><p>The login password can be retrieved using the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grafana get secret grafana -o jsonpath=&quot;{.data.admin-password}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> base64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span></span></code></pre></div><p>Navigate to the data sources configuration under <code>Configuration</code> &gt; <code>Data Sources</code> using the left-hand panel.</p><p>Confirm that the <code>Loki</code> data source has already been added as part of the Grafana installation:</p><p><img src="'+n+'" alt="image"></p><p>Access the <code>Loki</code> data source configuration page.</p><p>Use the <code>Test</code> button near the bottom of the page to test the connectivity between Grafana and Loki:</p><p><img src="'+l+`" alt="image"></p><p>The final step in the setup involves installing Promtail. Promtail is an agent that can be used to discover log targets and stream their logs to Loki:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svc_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki get svc loki -ojsonpath=&#39;{.metadata.name}.{.metadata.namespace}:{.spec.ports[?(@.name==&quot;http-metrics&quot;)].port}&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki upgrade --install --create-namespace promtail grafana/promtail </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image.tag=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.0 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;config.clients[0].url=http://\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svc_url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/loki/api/v1/push&quot;</span></span></code></pre></div><p>Confirm that the Promtail DaemonSet is successfully rolled out:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki rollout status ds/promtail</span></span></code></pre></div><h2 id="logs-segregation" tabindex="-1">Logs Segregation <a class="header-anchor" href="#logs-segregation" aria-label="Permalink to &quot;Logs Segregation&quot;">​</a></h2><p>To simulate a steady stream of log lines, the next step defines a blueprint that uses <a href="https://github.com/mingrammer/flog" target="_blank" rel="noreferrer">flog</a> to generate Apache common and error logs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat&lt;&lt;EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply -f -</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apiVersion:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cr.kanister.io/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kind:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Blueprint</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream-apache-logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  namespace:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">actions:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flogTask:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    phases:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> func: KubeTask</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taskApacheLogs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      args:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        namespace:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{{ .Namespace.Name }}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        image:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingrammer/flog:0.4.3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flog</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache_combined</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;120&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">s</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EOF</span></span></code></pre></div><p>Create the following actionset to invoke the <code>flogTask</code> action in the blueprint:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat&lt;&lt;EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create -f -</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apiVersion:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cr.kanister.io/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kind:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ActionSet</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  generateName:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream-apache-logs-task-</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  namespace:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">spec:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  actions:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name: flogTask</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    blueprint:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stream-apache-logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    object:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      kind:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Namespace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EOF</span></span></code></pre></div><p>Head over to the <em>Explore</em> pane in the Grafana UI.</p><p>Ensure that the <code>Loki</code> data source is selected.</p><p>Enter the following <a href="https://grafana.com/docs/loki/latest/logql/" target="_blank" rel="noreferrer">LogQL</a> query in the <em>Log Browser</em> input box to retrieve all Kanister logs:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kanister&quot;}</span></span></code></pre></div><p>The log outputs should look similar to this:</p><p><img src="`+p+'" alt="image"></p><p>Use the next query to select only the datapath logs, replacing <code>${actionset}</code> with the name of the recently created actionset:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kanister&quot;} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LogKind</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;datapath&quot;,ActionSet=&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actionset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span></code></pre></div><p>The <em>Logs</em> pane should only display Apache log lines generated by flog:</p><p><img src="'+h+`" alt="image"></p><p>LogQL is a very expressive language inspired by PromQL. There is so much more one can do with it. Be sure to check out its <a href="https://grafana.com/docs/loki/latest/logql/log_queries/" target="_blank" rel="noreferrer">documentation</a> for other use cases that involve more advanced line and label filtering, formatting and parsing.</p><h2 id="wrap-up" tabindex="-1">Wrap Up <a class="header-anchor" href="#wrap-up" aria-label="Permalink to &quot;Wrap Up&quot;">​</a></h2><p>As seen in this documentation, Kanister&#39;s consistent structured log lines allow one to easily integrate Kanister with more advanced log aggregation solutions to improve ensure better observability within the data protection workflows.</p><p>To remove Loki, Grafana and Promtail, use the following <code>helm</code> commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grafana uninstall grafana</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki uninstall promtail</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki uninstall loki</span></span></code></pre></div>`,57),r=[o];function d(g,c,F,y,u,C){return i(),a("div",null,r)}const b=s(k,[["render",d]]);export{B as __pageData,b as default};
