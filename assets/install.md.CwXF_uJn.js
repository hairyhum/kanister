import{_ as s,c as i,o as a,V as e}from"./chunks/framework.CiLzNYv1.js";const F=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"install.md","filePath":"install.md"}'),t={name:"install.md"},n=e(`<h1 id="install" tabindex="-1">Installation <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Installation {#install}&quot;">​</a></h1><p>Kanister can be easily installed and managed with <a href="https://helm.sh" target="_blank" rel="noreferrer">Helm</a>. You will need to configure your <code>kubectl</code> CLI tool to target the Kubernetes cluster you want to install Kanister on.</p><p>Start by adding the Kanister repository to your local setup:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo add kanister </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://charts.kanister.io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Use the <code>helm install</code> command to install Kanister in the <code>kanister</code> namespace:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister upgrade </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-install kanister </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-create-namespace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kanister/kanister-operator</span></span></code></pre></div><p>Confirm that the Kanister workloads are ready:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister get po</span></span></code></pre></div><p>You should see the operator pod in the <code>Running</code> state:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> READY STATUS RESTARTS AGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kanister-kanister-operator-85c747bfb8-dmqnj</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/1 Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">s</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Kanister is guaranteed to work with the 3 most recent versions of Kubernetes. For example, if the latest version of Kubernetes is 1.24, Kanister will work with 1.24, 1.23, and 1.22. Support for older versions is provided on a best-effort basis. If you are using an older version of Kubernetes, please consider upgrading to a newer version.</p></div><h2 id="configuring-kanister" tabindex="-1">Configuring Kanister <a class="header-anchor" href="#configuring-kanister" aria-label="Permalink to &quot;Configuring Kanister&quot;">​</a></h2><p>Use the <code>helm show values</code> command to list the configurable options:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show values kanister/kanister-operator</span></span></code></pre></div><p>For example, you can use the <code>image.tag</code> value to specify the Kanister version to install.</p><p>The source of the <code>values.yaml</code> file can be found on <a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml" target="_blank" rel="noreferrer">GitHub</a>.</p><h2 id="managing-custom-resource-definitions-crds" tabindex="-1">Managing Custom Resource Definitions (CRDs) <a class="header-anchor" href="#managing-custom-resource-definitions-crds" aria-label="Permalink to &quot;Managing Custom Resource Definitions (CRDs)&quot;">​</a></h2><p>The default RBAC settings in the Helm chart permit Kanister to manage and auto-update its own custom resource definitions, to ease the user&#39;s operation burden. If your setup requires the removal of these settings, you will have to install Kanister with the <code>--set controller.updateCRDs=false</code> option:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister upgade </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-install kanister </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-create-namespace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kanister/kanister-operator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-set controller.updateCRDs=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>This option lets Helm manage the CRD resources.</p><h2 id="using-custom-certificates-with-the-validating-webhook-controller" tabindex="-1">Using custom certificates with the Validating Webhook Controller <a class="header-anchor" href="#using-custom-certificates-with-the-validating-webhook-controller" aria-label="Permalink to &quot;Using custom certificates with the Validating Webhook Controller&quot;">​</a></h2><p>Kanister installation also creates a validating admission webhook server that is invoked each time a new Blueprint is created.</p><p>By default the Helm chart is configured to automatically generate a self-signed certificates for Admission Webhook Server. If your setup requires custom certificates to be configured, you will have to install kanister with <code>--set bpValidatingWebhook.tls.mode=custom</code> option along with other certificate details.</p><p>Create a Secret that stores the TLS key and certificate for webhook admission server:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create secret tls my-tls-secret </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-cert /path/to/tls.crt </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/path/to/tls.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister</span></span></code></pre></div><p>Install Kanister, providing the PEM-encoded CA bundle and the [tls]{.title-ref} secret name like below:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-install kanister kanister/kanister-operator </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-namespace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kanister</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-create-namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-set bpValidatingWebhook.tls.mode=custom</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\--set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bpValidatingWebhook.tls.caBundle=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/ca.pem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\|</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-w</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-set bpValidatingWebhook.tls.secretName=tls-secret</span></span></code></pre></div><h2 id="building-and-deploying-from-source" tabindex="-1">Building and Deploying from Source <a class="header-anchor" href="#building-and-deploying-from-source" aria-label="Permalink to &quot;Building and Deploying from Source&quot;">​</a></h2><p>Follow the instructions in the <code>BUILD.md</code> file in the <a href="https://github.com/kanisterio/kanister/blob/master/BUILD.md" target="_blank" rel="noreferrer">Kanister GitHub repository</a> to build Kanister from source code.</p>`,29),l=[n];function h(r,p,o,k,d,c){return a(),i("div",null,l)}const u=s(t,[["render",h]]);export{F as __pageData,u as default};
