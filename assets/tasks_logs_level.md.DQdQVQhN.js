import{_ as e,c as s,o as i,V as a}from"./chunks/framework.DyV3CXln.js";const _=JSON.parse('{"title":"Modifying Kanister Log Level","description":"","frontmatter":{},"headers":[],"relativePath":"tasks/logs_level.md","filePath":"tasks/logs_level.md"}'),l={name:"tasks/logs_level.md"},t=a(`<h1 id="modifying-kanister-log-level" tabindex="-1">Modifying Kanister Log Level <a class="header-anchor" href="#modifying-kanister-log-level" aria-label="Permalink to &quot;Modifying Kanister Log Level&quot;">â€‹</a></h1><p>Kanister uses structured logging to ensure that its logs can be easily categorized, indexed and searched by downstream log aggregation software.</p><p>The default logging level of Kanister is set to <code>info</code>. This logging level can be changed by modifying the value of the <code>LOG_LEVEL</code> environment variable of the Kanister container.</p><p>When using Helm, this value can be configured using the <code>controller.logLevel</code> variable. For example, to set the logging level to <code>debug</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister upgrade --install kanister </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller.logLevel=debug </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --create-namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kanister/kanister-operator</span></span></code></pre></div><p>The supported logging levels are:</p><ul><li><code>panic</code></li><li><code>fatal</code></li><li><code>error</code></li><li><code>info</code></li><li><code>debug</code></li><li><code>trace</code></li></ul>`,7),n=[t];function o(r,d,c,g,h,p){return i(),s("div",null,n)}const u=e(l,[["render",o]]);export{_ as __pageData,u as default};
